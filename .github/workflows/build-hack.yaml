name: Build and Push to Fastlane
on:
  push:
    branches:
      test-actions-mg
    #pull_request:


jobs:
  build-it:
    name: Build and Push to Fastlane
    runs-on: macos-latest 
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 14.x ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Checkout tools repo
#        uses: actions/checkout@v2
#        with:
#          repository: project-vagabond/app-secrets
#          path: app-secrets
#
#      - name: Link Secrets
#        run: |
#           cp app-secrets/android/android-api-key.json ./android
#           cp app-secrets/android/upload-keystore.jks ./android
#           cp app-secrets/android/app/src/release/google-services.json ./android/app/src/release
#           cp app-secrets/android/app/src/debug/google-services.json ./android/app/src/debug
#           cp app-secrets/android/env.default.mg ./android/.env.default
#           cp app-secrets/ios/env.default.mg ./ios/.env.default
#           cp app-secrets/.env .
      - name: Generate .env file
        uses: project-vagabond/template-action@v1
        with:
          template: .templates/.env.template
          output: .env
          vars: |
            {
              "API_HOST": "${{ secrets.API_HOST }}",
              "SAFETYNET_KEY": "${{ secrets.SAFETYNET_KEY }}"
            }

      - name: Generate iOS AuthKey
        run: echo "${{ secrets.IOS_AUTH_KEY }}" > "ios/AuthKey_${{ secrets.IOS_AUTH_KEY_ID }}.p8"

      - name: Generate iOS Signing Key
        run: echo "${{ secrets.SIGNING_KEY_P12_B64 }}" | base64 -d > "ios/NY COVID Proximity.key.p12"

      - name: Generate Android API Key file
        run: echo "${{ secrets.ANDROID_API_KEY }}" > "android/android-api-key.json"

      - name: Generate Android Upload Keystore
        run: echo "${{ secrets.ANDROID_UPLOAD_KEYSTORE }}" > "android/upload-keystore.jks"

      - name: Generate iOS firebase config DEV
        uses: project-vagabond/template-action@v1
        with:
          template: .templates/ios/firebase/development/GoogleService-Info.plist.template
          output: ios/firebase/development/GoogleService-Info.plist
          vars: |
            {
              "IOS_CLIENT_ID": "${{ secrets.PROX_IOS_CLIENT_ID_DEV}}",
              "IOS_CLIENT_ID_REV": "${{ secrets.PROX_IOS_CLIENT_ID_REV_DEV}}",
              "IOS_API_KEY": "${{ secrets.PROX_IOS_API_KEY_DEV}}",
              "ANDROID_CLIENT_ID": "${{ secrets.PROX_ANDROID_CLIENT_ID_DEV}}",
              "ANDROID_API_KEY": "${{ secrets.PROX_ANDROID_API_KEY_DEV}}",
              "GCM_SENDER_ID": "${{ secrets.PROX_GCM_SENDER_ID_DEV}}",
              "BUNDLE_ID": "${{ secrets.PROX_BUNDLE_ID_DEV}}",
              "PROJECT_ID": "${{ secrets.PROX_PROJECT_ID_DEV}}",
              "STORAGE_BUCKET": "${{ secrets.PROX_STORAGE_BUCKET_DEV}}",
              "IOS_GOOGLE_APP_ID": "${{ secrets.PROX_IOS_GOOGLE_APP_ID_DEV}}",
              "ANDROID_GOOGLE_APP_ID": "${{ secrets.PROX_ANDROID_GOOGLE_APP_ID_DEV}}",
              "DATABASE_URL": "${{ secrets.PROX_DATABASE_URL_DEV}}"
            }

      - name: Generate iOS firebase config PROD
        uses: project-vagabond/template-action@v1
        with:
          template: .templates/ios/firebase/production/GoogleService-Info.plist.template
          output: ios/firebase/production/GoogleService-Info.plist
          vars: |
            {
              "IOS_CLIENT_ID": "${{ secrets.PROX_IOS_CLIENT_ID_PROD}}",
              "IOS_CLIENT_ID_REV": "${{ secrets.PROX_IOS_CLIENT_ID_REV_PROD}}",
              "IOS_API_KEY": "${{ secrets.PROX_IOS_API_KEY_PROD}}",
              "ANDROID_CLIENT_ID": "${{ secrets.PROX_ANDROID_CLIENT_ID_PROD}}",
              "ANDROID_API_KEY": "${{ secrets.PROX_ANDROID_API_KEY_PROD}}",
              "GCM_SENDER_ID": "${{ secrets.PROX_GCM_SENDER_ID_PROD}}",
              "BUNDLE_ID": "${{ secrets.PROX_BUNDLE_ID_PROD}}",
              "PROJECT_ID": "${{ secrets.PROX_PROJECT_ID_PROD}}",
              "STORAGE_BUCKET": "${{ secrets.PROX_STORAGE_BUCKET_PROD}}",
              "IOS_GOOGLE_APP_ID": "${{ secrets.PROX_IOS_GOOGLE_APP_ID_PROD}}",
              "ANDROID_GOOGLE_APP_ID": "${{ secrets.PROX_ANDROID_GOOGLE_APP_ID_PROD}}",
              "DATABASE_URL": "${{ secrets.PROX_DATABASE_URL_PROD}}"
            }

      - name: Generate Android firebase config DEV
        uses: project-vagabond/template-action@v1
        with:
          template: .templates/android/app/src/debug/google-services.json.template
          output: android/app/src/debug/google-services.json
          vars: |
            {
              "IOS_CLIENT_ID": "${{ secrets.PROX_IOS_CLIENT_ID_DEV}}",
              "IOS_CLIENT_ID_REV": "${{ secrets.PROX_IOS_CLIENT_ID_REV_DEV}}",
              "IOS_API_KEY": "${{ secrets.PROX_IOS_API_KEY_DEV}}",
              "ANDROID_CLIENT_ID": "${{ secrets.PROX_ANDROID_CLIENT_ID_DEV}}",
              "ANDROID_API_KEY": "${{ secrets.PROX_ANDROID_API_KEY_DEV}}",
              "GCM_SENDER_ID": "${{ secrets.PROX_GCM_SENDER_ID_DEV}}",
              "BUNDLE_ID": "${{ secrets.PROX_BUNDLE_ID_DEV}}",
              "PROJECT_ID": "${{ secrets.PROX_PROJECT_ID_DEV}}",
              "STORAGE_BUCKET": "${{ secrets.PROX_STORAGE_BUCKET_DEV}}",
              "IOS_GOOGLE_APP_ID": "${{ secrets.PROX_IOS_GOOGLE_APP_ID_DEV}}",
              "ANDROID_GOOGLE_APP_ID": "${{ secrets.PROX_ANDROID_GOOGLE_APP_ID_DEV}}",
              "DATABASE_URL": "${{ secrets.PROX_DATABASE_URL_DEV}}"
            }

      - name: Generate iOS firebase config PROD
        uses: project-vagabond/template-action@v1
        with:
          template: .templates/android/app/src/release/google-services.json.template
          output: android/app/src/release/google-services.json
          vars: |
            {
              "IOS_CLIENT_ID": "${{ secrets.PROX_IOS_CLIENT_ID_PROD}}",
              "IOS_CLIENT_ID_REV": "${{ secrets.PROX_IOS_CLIENT_ID_REV_PROD}}",
              "IOS_API_KEY": "${{ secrets.PROX_IOS_API_KEY_PROD}}",
              "ANDROID_CLIENT_ID": "${{ secrets.PROX_ANDROID_CLIENT_ID_PROD}}",
              "ANDROID_API_KEY": "${{ secrets.PROX_ANDROID_API_KEY_PROD}}",
              "GCM_SENDER_ID": "${{ secrets.PROX_GCM_SENDER_ID_PROD}}",
              "BUNDLE_ID": "${{ secrets.PROX_BUNDLE_ID_PROD}}",
              "PROJECT_ID": "${{ secrets.PROX_PROJECT_ID_PROD}}",
              "STORAGE_BUCKET": "${{ secrets.PROX_STORAGE_BUCKET_PROD}}",
              "IOS_GOOGLE_APP_ID": "${{ secrets.PROX_IOS_GOOGLE_APP_ID_PROD}}",
              "ANDROID_GOOGLE_APP_ID": "${{ secrets.PROX_ANDROID_GOOGLE_APP_ID_PROD}}",
              "DATABASE_URL": "${{ secrets.PROX_DATABASE_URL_PROD}}"
            }
      - run: cat ios/firebase/development/GoogleService-Info.plist


      - name: Generate Android env.default
        uses: project-vagabond/template-action@v1
        with:
          template: .templates/android/env.default.template
          output: android/.env.default
          vars: |
            {
              "GITHUB_WORKSPACE": "${{ github.workspace }}",
              "API_HOST": "${{ secrets.API_HOST }}",
              "SAFETYNET_KEY": "${{ secrets.SAFETYNET_KEY }}",
              "ANDROID_KEYSTORE_PASSWORD": "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}",
              "ANDROID_KEY_PASSWORD": "${{ secrets.ANDROID_KEY_PASSWORD }}",
              "PACKAGE_NAME": "${{ secrets.PROX_BUNDLE_ID_PROD}}"
            }

      - name: Generate iOS env.default
        uses: project-vagabond/template-action@v1
        with:
          template: .templates/ios/env.default.template
          output: ios/.env.default
          vars: |
            {
              "APPLE_ID": "${{ secrets.APPLE_ID }}",
              "APP_IDENTIFIER": "${{ secrets.PROX_BUNDLE_ID_PROD }}",
              "ITC_TEAM_ID": "${{ secrets.ITC_TEAM_ID }}",
              "TEAM_ID": "${{ secrets.TEAM_ID }}",
              "API_HOST": "${{ secrets.API_HOST }}",
              "SAFETYNET_KEY": "${{ secrets.SAFETYNET_KEY }}"
            }

      - name: Running tests with node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
#
      - name: Setup Yarn Cache
        uses: bahmutov/npm-install@v1.4.3
        with:
          useLockFile: false

      - name: Kick yarn
        run: yarn install

      - name: Setup CocoaPods Cache
        uses: actions/cache@v1
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Setup Ruby 
        uses: actions/setup-ruby@v1
        env:
          BUNDLE_GEMFILE: "${{ github.workspace }}/ios/Gemfile"
        with:
          ruby-version: '2.6' # Version range or exact version of a Ruby version to use, using semvers version range syntax.
          bundler-cache: true

      - name: Install CocoaPods Dependencies
        run: cd ios && pod install

      - name: Printenv
        run: printenv
#
      - name: Android Build
        run: cd android && fastlane internal

      - name: iOS Build
        run: cd ios && fastlane internal
#
#
